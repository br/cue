#!/bin/bash

function git_project {
  local gitname=$(\git config remote.origin.name)
  if [[ -z $gitname ]]; then
    gitname=$(basename $(\git config remote.origin.url) .git)
  fi
  echo "$gitname"
}

function git_branch {
  local sha="$(\git reflog | head -1 | awk '{print $1}')"

  local nm_heads="$(\git show-ref --heads | grep ^$sha | cut -d/ -f3- | xargs -- | sed 's# #,#g')"
  local nm_tags="$(\git show-ref --tags | grep ^$sha | cut -d/ -f3- | xargs -- | sed 's# #,#g')"

  local nm_branch=""
  if [[ -n "$nm_heads" ]]; then
    nm_branch="$nm_heads"
  fi

  if [[ -n "$nm_tags" ]]; then
    nm_branch="$nm_branch<$nm_tags>"
  else
    if [[ -z "$nm_heads" ]]; then
      nm_branch="$nm_branch<$sha>"
    fi
  fi
  
  echo "$nm_branch"
} 

function git_status {
  local gitstat=$(mktemp -t XXXXXX)
  \git status --ignore-submodules=dirty 2>/dev/null > $gitstat
 
  if [[ $(grep -c "# Your branch is ahead" $gitstat) > 0 ]]; then
    echo -n "^"
  elif [[ $(grep -c "# Your branch is behind" $gitstat) > 0 ]]; then
    echo -n "v"
  else
    echo -n ":"
  fi

  echo -n " "

  local num
  if [[ $(grep -c "# Changes" $gitstat) > 0 ]]; then
    num=$(sed -n '/^# Changes/,/^# [^ ]/p' $gitstat | grep '^#	' | wc -l | awk '{print $1}')
    if [[ "$num" -gt 9 ]]; then
        echo -n "!!{$num}!!"
    else
      while [[ "$num" > 0 ]]; do 
      echo -n "!"
      num=$((num -1))
      done
    fi
  fi

  if [[ $(grep -c "# Changed" $gitstat) > 0 ]]; then
    num=$(sed -n '/^# Changed/,/^# [^ ]/p' $gitstat | grep '^#	' | wc -l | awk '{print 1}')
    if [[ "$num" -gt 9 ]]; then
        echo -n "??{$num}??"
    else
        while [[ "$num" > 0 ]]; do 
        echo -n "?"
        num=$((num -1))
        done
    fi
  fi

  if [[ $(grep -c "# Untracked" $gitstat) > 0 ]]; then
    num=$(sed -n '/^# Untracked/,/^# [^ ]/p' $gitstat | grep '^#	' | wc -l | awk '{print $1}')
    if [[ "$num" -gt 9 ]]; then
        echo -n "**{$num}**"
    else
        while [[ "$num" > 0 ]]; do 
        echo -n "*"
        num=$((num -1))
        done
    fi
  fi

  rm -f $gitstat
}

function prompt_git {
  # optional git
  local tmp_project="$(mktemp -t XXXXXXXXX)"
  local tmp_status="$(mktemp -t XXXXXXXXX)"
  git_status > $tmp_status &
  git_project > $tmp_project &
  wait

  local nm_project="$(cat $tmp_project)"
  local gstatus="$(cat $tmp_status)"
  local nm_branch="$(git_branch)"
  rm -f $tmp_project $tmp_status

  if [[ -n $nm_project ]]; then
    local clr_gstatus="${scomment}"
    if [[ -n $nm_branch ]]; then
      if [[ ${gstatus% *} != ":" ]]; then
        clr_gstatus="${syellow}"
      fi
    else
      gstatus=': '
      clr_gstatus="${syellow}"
      nm_branch='<unknown>'
    fi
    echo " ${shigh}$nm_branch${clr_gstatus}${gstatus% *}${shigh}$nm_project${syellow}${gstatus#* }"
  fi
}
